{"version":3,"sources":["TypeConverter.ts"],"names":["AutoMapperJs","AutoMapperJs.TypeConverter","AutoMapperJs.TypeConverter.constructor","AutoMapperJs.TypeConverter.convert"],"mappings":"AAAA,mEAAmE;AAEnE,IAAO,YAAY,CAUlB;AAVD,WAAO,YAAY,EAAC,CAAC;IACjBA,YAAYA,CAACA;IAEbA;QAAAC;QAMAC,CAACA;QALUD,+BAAOA,GAAdA,UAAeA,iBAAqCA;YAChDE,AAEAA,qFAFqFA;YACrFA,mFAAmFA;kBAC7EA,IAAIA,KAAKA,CAACA,4FAA4FA,CAACA,CAACA;QAClHA,CAACA;QACLF,oBAACA;IAADA,CANAD,AAMCC,IAAAD;IANYA,0BAAaA,gBAMzBA,CAAAA;AACLA,CAACA,EAVM,YAAY,KAAZ,YAAY,QAUlB","file":"TypeConverter.js","sourcesContent":["/// <reference path=\"../../tools/typings/arcady-automapper.d.ts\" />\r\n\r\nmodule AutoMapperJs {\r\n    'use strict';\r\n\r\n    export class TypeConverter implements ITypeConverter {\r\n        public convert(resolutionContext: IResolutionContext): any {\r\n            // NOTE BL Unfortunately, TypeScript/JavaScript do not support abstract base classes.\r\n            //         This is just one way around, please convince me about a better solution.\r\n            throw new Error('The TypeConverter.convert method is abstract. Use a TypeConverter extension class instead.');\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}