var AutoMapperJs;!function(e){"use strict";var r=function(){function r(){if(r.instance)throw new Error("Instantiation failed: Use getInstance() function instead of constructor function.");r.instance=this,this.mappings={}}return r.getInstance=function(){return r.instance},r.prototype.createMap=function(e,r){var t=this;if(arguments.length<this.createMap.length)return this.handleCurrying(this.createMap,arguments,this);var n=e+r,o={key:n,forAllMemberMappings:new Array,forMemberMappings:{},typeConverterFunction:void 0,destinationTypeClass:void 0};this.mappings[n]=o;var a={forMember:function(e,r){return t.createMapForMember(o,a,e,r)},forSourceMember:function(e,r){return t.createMapForSourceMember(o,a,e,r)},forAllMembers:function(e){return t.createMapForAllMembers(o,a,e)},convertToType:function(e){return t.createMapConvertToType(o,a,e)},convertUsing:function(e){return t.createMapConvertUsing(o,e)}};return a},r.prototype.map=function(e,r,t){if(arguments.length<this.map.length)return this.handleCurrying(this.map,arguments,this);var n=e+r,o=this.mappings[n];if(!o)throw new Error("Could not find map object with a source of "+e+" and a destination of "+r);return t instanceof Array?this.mapArray(o,t):this.mapItem(o,t)},r.prototype.createMapForMember=function(e,r,t,n){var o=void 0,a=this.createMapForMemberFindMember(e,t);if(null!==a&&void 0!==a){if(a.ignore)return r;o=""+a.sourceProperty}else a={sourceProperty:t,destinationProperty:t,mappingValuesAndFunctions:new Array,ignore:!1};return"function"==typeof n?this.createMapForMemberHandleMappingFunction(e,a,n):a.mappingValuesAndFunctions.push(n),o?o!==a.sourceProperty&&(delete e.forMemberMappings[o],e.forMemberMappings[a.sourceProperty]=a):e.forMemberMappings[a.sourceProperty]=a,r},r.prototype.createMapForMemberFindMember=function(e,r){for(var t in e.forMemberMappings)if(e.forMemberMappings.hasOwnProperty(t)){var n=e.forMemberMappings[t];if(n.destinationProperty===r)return e.forMemberMappings[t]}return null},r.prototype.createMapForMemberHandleMappingFunction=function(e,r,t){var n=!0,o={};o[r.sourceProperty]={};var a={ignore:function(){r.ignore=!0,r.sourceProperty=r.destinationProperty,r.mappingValuesAndFunctions=new Array,n=!1},mapFrom:function(e){r.sourceProperty=e},sourceObject:o,sourcePropertyName:r.sourceProperty,destinationPropertyValue:{}};try{t(a)}catch(i){}n&&r.mappingValuesAndFunctions.push(t)},r.prototype.createMapForSourceMember=function(e,r,t,n){var o=!1,a=t;if("function"!=typeof n)throw new Error("Configuration of forSourceMember has to be a function with one options parameter.");var i={ignore:function(){o=!0,a=void 0}};n(i);var p=e.forMemberMappings[t];return p?o?(p.ignore=!0,p.mappingValuesAndFunctions=new Array):p.mappingValuesAndFunctions.push(n):e.forMemberMappings[t]={sourceProperty:t,destinationProperty:a,mappingValuesAndFunctions:[n],ignore:o},r},r.prototype.createMapForAllMembers=function(e,r,t){return e.forAllMemberMappings.push(t),r},r.prototype.createMapConvertToType=function(e,r,t){return e.destinationTypeClass=t,r},r.prototype.createMapConvertUsing=function(r,t){var n;try{n=1===this.getFunctionParameters(t).length?t:t instanceof e.TypeConverter?t.convert:(new t).convert}catch(o){throw new Error("The value provided for typeConverterClassOrFunction is invalid. Exception: "+o)}if(!n||1!==this.getFunctionParameters(n).length)throw new Error("The value provided for typeConverterClassOrFunction is invalid, because it does not provide exactly one (resolutionContext) parameter.");r.typeConverterFunction=n},r.prototype.mapArray=function(e,r){for(var t=new Array,n=0,o=r.length;o>n;n++){var a=r[n],i=this.mapItem(e,a,n);i&&t.push(i)}return t},r.prototype.mapItem=function(e,r,t){void 0===t&&(t=void 0);var n=e.destinationTypeClass?new e.destinationTypeClass:{};if(e.typeConverterFunction){var o={sourceValue:r,destinationValue:n};return e.typeConverterFunction(o)}for(var a in r)r.hasOwnProperty(a)&&this.mapProperty(e,r,a,n);return n},r.prototype.mapProperty=function(e,r,t,n){var o=e.forMemberMappings[t];if(o){if(o.ignore)return;for(var a={mapFrom:function(){},ignore:function(){},sourceObject:r,sourcePropertyName:t,destinationPropertyValue:r[t]},i=0,p=o.mappingValuesAndFunctions.length;p>i;i++){var s,u=o.mappingValuesAndFunctions[i];"function"==typeof u?(s=u(a),"undefined"==typeof s&&(s=a.destinationPropertyValue)):s=u,a.destinationPropertyValue=s}this.mapSetValue(e,n,o.destinationProperty,a.destinationPropertyValue)}else this.mapSetValue(e,n,t,r[t])},r.prototype.mapSetValue=function(e,r,t,n){if(e.forAllMemberMappings.length>0)for(var o=0;o<e.forAllMemberMappings.length;o++)e.forAllMemberMappings[o](r,t,n);else r[t]=n},r.prototype.getFunctionParameters=function(e){var r=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,t=/([^\s,]+)/g,n=e.toString().replace(r,""),o=n.slice(n.indexOf("(")+1,n.indexOf(")")).match(t);return null===o&&(o=new Array),o},r.prototype.handleCurrying=function(e,r,t){function n(r,o,a){for(var i=o.slice(0),p=a,s=0;s<r.length;s++,a--)o[o.length]=r[s];if(a-r.length<=0){var u=e.apply(t,o);return o=i,a=p,u}return function(){return n(arguments,o.slice(0),a)}}var o=e.length-r.length,a=Array.prototype.slice.apply(r);return n([],a,o)},r.instance=new r,r}();e.AutoMapper=r}(AutoMapperJs||(AutoMapperJs={}));var automapper=function(e){return e.automapper?e.automapper:(e.automapper=AutoMapperJs.AutoMapper.getInstance(),e.automapper)}(this);
var AutoMapperJs;!function(e){"use strict";var t=function(){function e(){}return e.prototype.convert=function(e){throw new Error("The TypeConverter.convert method is abstract. Use a TypeConverter extension class instead.")},e}();e.TypeConverter=t}(AutoMapperJs||(AutoMapperJs={}));